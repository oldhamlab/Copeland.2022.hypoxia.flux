---
title: "Network Analysis"
format: html
---

```{r}
#| label: setup

suppressPackageStartupMessages({
  library(tidyverse)
  library(tidygraph)
  library(ggraph)
})

withr::with_dir(here::here(), {
  x <- targets::tar_read(cosmos_res)
})
```


## Objective

Review the TF-Gene-Metabolite network generated by `cosmosR`.

## Data

```{r}
#| label: network
gr <- 
  x |> 
  mutate(
    type = case_when(
      str_detect(node, "Enz") ~ "enzyme", 
      str_detect(node, "Met") ~ "metabolite", 
      TRUE ~ "protein"
    )
  )
```


```{r}
#| label: metabolites

nodes <- 
  gr |> 
  activate(nodes) |> 
  as_tibble()

filter(nodes, type == "protein") 
filter(nodes, type == "metabolite")
```


```{r}
#| label: communities

gr1 <- 
  gr |> 
  mutate(
    community = as.factor(group_spinglass(weights = weight)), 
  ) 
```


## Visualization

```{r}
#| label: overview

ggraph(gr1, layout = "stress") +
  geom_edge_link(
    aes(
      alpha = weight
    ),
    show.legend = FALSE
  ) +
  geom_node_point(
    aes(
      fill = community, 
      shape = type, 
      alpha = as.factor(measured)
    ), 
    size = 2, 
    show.legend = TRUE
  ) +
  guides(
    shape = guide_legend(), 
    fill = "none", 
    edge_alpha = "none", 
    alpha = "none"
  ) +
  scale_shape_manual(values = c(21, 22, 24)) + 
  scale_alpha_manual(values = c(0.2, 1)) +
  theme_graph() +
  NULL
```

## NOIs

```{r}
#| label: EGR

x <- 
  gr |> 
  # convert(
  #   to_shortest_path,
  #   from = which(.N()$node == "Met_Citric acid_m"),
  #   to = which(.N()$node == "BRD4"),
  #   mode = "all"
  # ) |>
  convert(
    to_local_neighborhood,
    node = which(.N()$node == "MYC"),
    order = 1,
    mode = "all"
  )

ggraph(x, layout = "stress") +
  geom_edge_link(
    aes(
      filter = sign == 1,
      alpha = weight,
      start_cap = label_rect(node1.node), 
      end_cap = label_rect(node2.node), 
      # color = sign
    ), 
    arrow = arrow(length = unit(2, "mm")), 
    show.legend = FALSE
  ) +
  geom_edge_link(
    aes(
      filter = sign == -1,
      alpha = weight, 
      start_cap = label_rect(node1.node), 
      end_cap = label_rect(node2.node)
    ),
    arrow = arrow(length = unit(2, "mm"), angle = 90),
    show.legend = FALSE
  ) +
  geom_node_text(
    aes(label = node)
  ) +
  # guides(
  #   shape = guide_legend(), 
  #   fill = "none", 
  #   edge_alpha = "none", 
  #   alpha = "none"
  # ) +
  scale_shape_manual(values = c(21, 22, 24)) + 
  scale_alpha_manual(values = c(0.2, 1)) +
  theme_graph() +
  NULL
```


